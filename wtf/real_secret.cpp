//shb_secret{d0926e989fad69fc55e72e9e982a5e2b36987d36a8f80b8e66d730ed017a3440}
#include "XorStr.hpp"
#include "real_secret.h"

const unsigned char FLAG[] = { 0x73, 0x69, 0x60, 0x5c, 0x77, 0x60, 0x65, 0x75, 0x6d, 0x7d, 0x71, 0x6f, 0x3c, 0x34, 0x3c, 0x39, 0x75, 0x28, 0x2a, 0x2a, 0x72, 0x74, 0x72, 0x21, 0x21, 0x7f, 0x79, 0x2e, 0x29, 0x78, 0x29, 0x2d, 0x45, 0x18, 0x47, 0x1a, 0x1c, 0x17, 0x47, 0x12, 0x4d, 0x1b, 0x48, 0x18, 0x1a, 0x14, 0x16, 0x18, 0x54, 0x02, 0x04, 0x52, 0x0c, 0x53, 0x0e, 0x07, 0x5a, 0x01, 0x5f, 0x0d, 0x0a, 0x59, 0x09, 0x0c, 0x70, 0x24, 0x26, 0x73, 0x75, 0x72, 0x27, 0x74, 0x7c, 0x7d, 0x7a, 0x36, 0x4c, };
void real_secret()
{
	_asm jmp _noLabel
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
		unsigned char flag[77] = { };
		for (int i = 0; i < 77; i++)
		{
			flag[i] = FLAG[i] ^ i;
		}
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	JUNK_CODE
	_asm _noLabel:
	_asm nop
	return;
}
